// =================================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// =================================================================================

package model

import (
	"github.com/gogf/gf/os/gtime"
)

// Categories is the golang structure for table categories.
type Categories struct {
	Id          uint64      `orm:"id,primary"  json:"id"`          //
	Name        string      `orm:"name"        json:"name"`        // 名称
	Description string      `orm:"description" json:"description"` // 描述
	PostCount   int         `orm:"post_count"  json:"postCount"`   // 帖子数
	CreatedAt   *gtime.Time `orm:"created_at"  json:"createdAt"`   //
	UpdatedAt   *gtime.Time `orm:"updated_at"  json:"updatedAt"`   //
}

// FailedJobs is the golang structure for table failed_jobs.
type FailedJobs struct {
	Id         uint64      `orm:"id,primary" json:"id"`         //
	Connection string      `orm:"connection" json:"connection"` //
	Queue      string      `orm:"queue"      json:"queue"`      //
	Payload    string      `orm:"payload"    json:"payload"`    //
	Exception  string      `orm:"exception"  json:"exception"`  //
	FailedAt   *gtime.Time `orm:"failed_at"  json:"failedAt"`   //
}

// Images is the golang structure for table images.
type Images struct {
	Id        uint64      `orm:"id,primary" json:"id"`        //
	UserId    int         `orm:"user_id"    json:"userId"`    //
	Type      string      `orm:"type"       json:"type"`      //
	Path      string      `orm:"path"       json:"path"`      //
	CreatedAt *gtime.Time `orm:"created_at" json:"createdAt"` //
	UpdatedAt *gtime.Time `orm:"updated_at" json:"updatedAt"` //
}

// Links is the golang structure for table links.
type Links struct {
	Id        uint64      `orm:"id,primary" json:"id"`        //
	Title     string      `orm:"title"      json:"title"`     // 资源的描述
	Link      string      `orm:"link"       json:"link"`      // 资源的链接
	CreatedAt *gtime.Time `orm:"created_at" json:"createdAt"` //
	UpdatedAt *gtime.Time `orm:"updated_at" json:"updatedAt"` //
}

// Migrations is the golang structure for table migrations.
type Migrations struct {
	Id        uint   `orm:"id,primary" json:"id"`        //
	Migration string `orm:"migration"  json:"migration"` //
	Batch     int    `orm:"batch"      json:"batch"`     //
}

// ModelHasPermissions is the golang structure for table model_has_permissions.
type ModelHasPermissions struct {
	PermissionId uint64 `orm:"permission_id,primary" json:"permissionId"` //
	ModelType    string `orm:"model_type,primary"    json:"modelType"`    //
	ModelId      uint64 `orm:"model_id,primary"      json:"modelId"`      //
}

// ModelHasRoles is the golang structure for table model_has_roles.
type ModelHasRoles struct {
	RoleId    uint64 `orm:"role_id,primary"    json:"roleId"`    //
	ModelType string `orm:"model_type,primary" json:"modelType"` //
	ModelId   uint64 `orm:"model_id,primary"   json:"modelId"`   //
}

// Notifications is the golang structure for table notifications.
type Notifications struct {
	Id             string      `orm:"id,primary"      json:"id"`             //
	Type           string      `orm:"type"            json:"type"`           //
	NotifiableType string      `orm:"notifiable_type" json:"notifiableType"` //
	NotifiableId   uint64      `orm:"notifiable_id"   json:"notifiableId"`   //
	Data           string      `orm:"data"            json:"data"`           //
	ReadAt         *gtime.Time `orm:"read_at"         json:"readAt"`         //
	CreatedAt      *gtime.Time `orm:"created_at"      json:"createdAt"`      //
	UpdatedAt      *gtime.Time `orm:"updated_at"      json:"updatedAt"`      //
}

// PasswordResets is the golang structure for table password_resets.
type PasswordResets struct {
	Email     string      `orm:"email"      json:"email"`     //
	Token     string      `orm:"token"      json:"token"`     //
	CreatedAt *gtime.Time `orm:"created_at" json:"createdAt"` //
}

// Permissions is the golang structure for table permissions.
type Permissions struct {
	Id        uint64      `orm:"id,primary" json:"id"`        //
	Name      string      `orm:"name"       json:"name"`      //
	GuardName string      `orm:"guard_name" json:"guardName"` //
	CreatedAt *gtime.Time `orm:"created_at" json:"createdAt"` //
	UpdatedAt *gtime.Time `orm:"updated_at" json:"updatedAt"` //
}

// Replies is the golang structure for table replies.
type Replies struct {
	Id        uint        `orm:"id,primary" json:"id"`        //
	TopicId   uint        `orm:"topic_id"   json:"topicId"`   //
	UserId    uint64      `orm:"user_id"    json:"userId"`    //
	Content   string      `orm:"content"    json:"content"`   //
	CreatedAt *gtime.Time `orm:"created_at" json:"createdAt"` //
	UpdatedAt *gtime.Time `orm:"updated_at" json:"updatedAt"` //
}

// RoleHasPermissions is the golang structure for table role_has_permissions.
type RoleHasPermissions struct {
	PermissionId uint64 `orm:"permission_id,primary" json:"permissionId"` //
	RoleId       uint64 `orm:"role_id,primary"       json:"roleId"`       //
}

// Roles is the golang structure for table roles.
type Roles struct {
	Id        uint64      `orm:"id,primary" json:"id"`        //
	Name      string      `orm:"name"       json:"name"`      //
	GuardName string      `orm:"guard_name" json:"guardName"` //
	CreatedAt *gtime.Time `orm:"created_at" json:"createdAt"` //
	UpdatedAt *gtime.Time `orm:"updated_at" json:"updatedAt"` //
}

// Topics is the golang structure for table topics.
type Topics struct {
	Id              uint        `orm:"id,primary"         json:"id"`              //
	Title           string      `orm:"title"              json:"title"`           //
	Body            string      `orm:"body"               json:"body"`            //
	UserId          uint64      `orm:"user_id"            json:"userId"`          //
	CategoryId      uint        `orm:"category_id"        json:"categoryId"`      //
	ReplyCount      uint        `orm:"reply_count"        json:"replyCount"`      //
	ViewCount       uint        `orm:"view_count"         json:"viewCount"`       //
	LastReplyUserId uint        `orm:"last_reply_user_id" json:"lastReplyUserId"` //
	Order           uint        `orm:"order"              json:"order"`           //
	Excerpt         string      `orm:"excerpt"            json:"excerpt"`         //
	Slug            string      `orm:"slug"               json:"slug"`            //
	CreatedAt       *gtime.Time `orm:"created_at"         json:"createdAt"`       //
	UpdatedAt       *gtime.Time `orm:"updated_at"         json:"updatedAt"`       //
}

// Users is the golang structure for table users.
type Users struct {
	Id                uint64      `orm:"id,primary"            json:"id"`                //
	Name              string      `orm:"name"                  json:"name"`              //
	Phone             string      `orm:"phone,unique"          json:"phone"`             //
	Email             string      `orm:"email,unique"          json:"email"`             //
	EmailVerifiedAt   *gtime.Time `orm:"email_verified_at"     json:"emailVerifiedAt"`   //
	Password          string      `orm:"password"              json:"password"`          //
	WeixinOpenid      string      `orm:"weixin_openid,unique"  json:"weixinOpenid"`      //
	WeixinUnionid     string      `orm:"weixin_unionid,unique" json:"weixinUnionid"`     //
	RememberToken     string      `orm:"remember_token"        json:"rememberToken"`     //
	CreatedAt         *gtime.Time `orm:"created_at"            json:"createdAt"`         //
	UpdatedAt         *gtime.Time `orm:"updated_at"            json:"updatedAt"`         //
	Avatar            string      `orm:"avatar"                json:"avatar"`            //
	Introduction      string      `orm:"introduction"          json:"introduction"`      //
	NotificationCount uint        `orm:"notification_count"    json:"notificationCount"` //
	LastActivedAt     *gtime.Time `orm:"last_actived_at"       json:"lastActivedAt"`     //
}
